{
  "name": "dargs-object",
  "version": "0.2.0",
  "description": "Fork of https://github.com/sindresorhus/dargs. Converts an object of options into an array of command-line arguments. Useful when calling command-line tools. Now object-aware",
  "keywords": [
    "options",
    "arguments",
    "args",
    "flags",
    "cli"
  ],
  "homepage": "https://github.com/r3b/dargs",
  "bugs": {
    "url": "https://github.com/r3b/dargs/issues"
  },
  "author": {
    "name": "ryan bridges",
    "email": "ryan@fasterness.com",
    "url": "http://fasterness.com"
  },
  "main": "dargs.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/r3b/dargs.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "~1.9.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "files": [
    "dargs.js"
  ],
  "readme": "# dargs-object\n\n> Converts an object of options into an array of command-line arguments\n\nBasically the inverse of an argument parser like nopt or minimist.\n\n>Forked from https://github.com/sindresorhus/dargs\n\n## Install\n\n```bash\n$ npm install --save dargs-object\n```\n\n\n#### Example\n\n```js\nvar dargs = require('dargs-object');\n\nvar obj = {\n\tfoo: 'bar',\n\thello: true,                    // results in only the key being used\n\tcake: false,                    // ignored\n\tcamelCase: 5,                   // camelCase is slugged to `camel-case`\n\tmultiple: ['value', 'value2'],  // converted to multiple arguments\n\tobject: {test:'value'},\n\tsad: ':('\n};\n\nvar options={\n\texcludes:['sad'],\n\tconvertCamelCase:true,\n\tjoinLists:false\n};\nconsole.log(dargs(obj, options));\n\n/*\n[\n\t'--foo', 'bar',\n\t'--hello',\n\t'--camel-case', '5',\n\t'--multiple', 'value',\n\t'--multiple', 'value2',\n\t'--object.test', 'value'\n]\n*/\n```\n\n\n## API\n\n### dargs(obj, options)\n\n#### obj\n\nType: `Object`\n\nan object containing options to convert to command-line arguments.\n\n#### options\n\nType: `Object`\n\nProperties:\n\n- excludes: Keys to exclude.\n- joinLists: If false (default), array values will generate multiple flags: '--list thing1 --list thing2 --list thing3'. If true, array values will be passed, delimited, to a single flag: '--list thing1,thing2,thing3'.\n- convertCamelCase (default: false): Convert camelCase flags to camel-case\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT) Â© [Ryan Bridges](http://fasterness.com), based off the original dargs by [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "dargs-object@0.2.0",
  "dist": {
    "shasum": "c7a528e050719f24b2c91e52007f13623439cbd2"
  },
  "_from": "dargs-object@~0.2.0",
  "_resolved": "https://registry.npmjs.org/dargs-object/-/dargs-object-0.2.0.tgz"
}
